import type { NextPage } from 'next'
import dynamic from 'next/dynamic'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import useWebSocket from 'react-use-websocket'
import { v4 } from 'uuid'
import Header from '../../components/Header'

const supportedCoins = ['btc', 'eth']
const krwMarket: { [key: string]: string } = {
  btc: 'KRW-BTC',
  eth: 'KRW-ETH'
}

const Chart = dynamic(() => import('../../components/Chart'), { ssr: false })

const Trade: NextPage = () => {
  let coinName = ''
  const [price, setPrice] = useState(0)

  if (typeof window !== 'undefined') {
    coinName = location.href.substring(location.href.lastIndexOf('/') + 1)
    if (!supportedCoins.includes(coinName)) return <div>Sorry. We dont supports {coinName.toUpperCase()}.</div>
  }
  
  const {
    sendMessage,
    lastMessage
  } = useWebSocket('wss://api.upbit.com/websocket/v1')

  useEffect(() => {
    sendMessage(JSON.stringify([
      {
        ticket: v4(),
      },
      {
        type: 'trade',
        codes: [krwMarket[coinName]],
      },
      {
        format: 'SIMPLE',
      },
    ]))
  }, [])

  lastMessage?.data.text().then((message: string) => {
    const coinData = JSON.parse(message)
    setPrice(coinData.tp)
  })

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Header title={`Bitbit/Trade/${coinName.toUpperCase()}`} />
      <div className='px-6'>
        <p className='text-red-500'>{price.toLocaleString('en-us')}â‚©</p>
        <Chart />
      </div>
    </div>
  )
}

export default Trade
